package dom;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

public class Sax_ParseXML {
		public static void main(String[] args) throws ParserConfigurationException, Exception {
			//创建sax解析器
			SAXParser sax=SAXParserFactory.newInstance().newSAXParser();
			//获取内容读取器
			XMLReader xml=sax.getXMLReader();
			//注册一个内容处理器
			xml.setContentHandler(new DefaultHandler()
			{
				String curName="";//记录当前是哪个标签
				int index=0; //记录读到那个作者
				@Override
				public void startDocument() throws SAXException {
					//System.out.println("文档解析开始了");
					
				}

				@Override
				public void endDocument() throws SAXException {
					//System.out.println("文档解析结束了");
				}

				@Override
				public void startElement(String uri, String localName,
						String qName, Attributes attributes)
						throws SAXException {
					//System.out.println(qName+" 标签解析开始了............");
					if(qName.equals("作者"))
					{
						System.out.println("到了作者");
						curName="作者";
						index++;
					}
				}

				@Override
				public void endElement(String uri, String localName,
						String qName) throws SAXException {
					//System.out.println(qName+" 标签解析结束了");
					curName="";
				}

				@Override
				public void characters(char[] ch, int start, int length)
						throws SAXException {
					//System.out.println(new String(ch,start,length)+"文本");
					if("作者".equals(curName)&&index==2)
					{
						System.out.println("到了第二个作者");
						System.out.println(new String(ch,start,length));
					}
				}
				
			});
			//加载xml文档
			xml.parse("src/bookName.xsl");
		}
}



